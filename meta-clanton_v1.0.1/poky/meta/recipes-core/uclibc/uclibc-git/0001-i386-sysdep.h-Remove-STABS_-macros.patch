Upstream-Status: Submitted

-Khem

From e20fd2c2427be981c16cb936cc6866d08520de9b Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Mon, 25 Mar 2013 19:34:39 -0700
Subject: [PATCH] i386/sysdep.h: Remove STABS_* macros

uclibc is compiled with elf/dwarf and secondly HAVE_CPP_ASM_DEBUGINFO
is not defined so we generate bogus .stab sections needlessly

Some of post processing tools get confused when they see both
dwarf and stab sections

Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 libc/sysdeps/linux/i386/sysdep.h |   27 ---------------------------
 1 file changed, 27 deletions(-)

diff --git a/libc/sysdeps/linux/i386/sysdep.h b/libc/sysdeps/linux/i386/sysdep.h
index 983c4f5..7a8d2e2 100644
--- a/libc/sysdeps/linux/i386/sysdep.h
+++ b/libc/sysdeps/linux/i386/sysdep.h
@@ -43,12 +43,9 @@
    incomplete stabs information.  Fake some entries here which specify
    the current source file.  */
 #define	ENTRY(name)							      \
-  STABS_CURRENT_FILE1("")						      \
-  STABS_CURRENT_FILE(name)						      \
   ASM_GLOBAL_DIRECTIVE C_SYMBOL_NAME(name);				      \
   ASM_TYPE_DIRECTIVE (C_SYMBOL_NAME(name),@function)			      \
   .align ALIGNARG(4);							      \
-  STABS_FUN(name)							      \
   C_LABEL(name)								      \
   cfi_startproc;							      \
   CALL_MCOUNT
@@ -57,30 +54,6 @@
 #define END(name)							      \
   cfi_endproc;								      \
   ASM_SIZE_DIRECTIVE(name)						      \
-  STABS_FUN_END(name)
-
-#ifdef HAVE_CPP_ASM_DEBUGINFO
-/* Disable that goop, because we just pass -g through to the assembler
-   and it generates proper line number information directly.  */
-# define STABS_CURRENT_FILE1(name)
-# define STABS_CURRENT_FILE(name)
-# define STABS_FUN(name)
-# define STABS_FUN_END(name)
-#else
-/* Remove the following two lines once the gdb bug is fixed.  */
-#define STABS_CURRENT_FILE(name)					      \
-  STABS_CURRENT_FILE1 (#name)
-#define STABS_CURRENT_FILE1(name)					      \
-  1: .stabs name,100,0,0,1b;
-/* Emit stabs definition lines.  We use F(0,1) and define t(0,1) as `int',
-   the same way gcc does it.  */
-#define STABS_FUN(name) STABS_FUN2(name, name##:F(0,1))
-#define STABS_FUN2(name, namestr)					      \
-  .stabs "int:t(0,1)=r(0,1);-2147483648;2147483647;",128,0,0,0;		      \
-  .stabs #namestr,36,0,0,name;
-#define STABS_FUN_END(name)						      \
-  1: .stabs "",36,0,0,1b-name;
-#endif
 
 /* If compiled for profiling, call `mcount' at the start of each function.  */
 #ifdef	PROF
-- 
1.7.9.5

